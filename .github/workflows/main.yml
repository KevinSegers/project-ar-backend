name: Build, test and deliver container to Docker Hub

on: push

jobs:
  mongodb-pages:
    runs-on: ubuntu-latest
    name: Java 11 build, test, deliver container
    steps:
      - name: Check out repository
        uses: actions/checkout@v1
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Start MongoDB for integration test
        uses: supercharge/mongodb-github-action@1.3.0
        with:
          mongodb-version: 4.2
#      - name: Build, test and package project
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
#          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
#        run: mvn -B -e -X verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=kevinsegers_project-ar-backend_page-service
      - name: SonarCloud Scan
        run: mvn -B -e -X verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=kevinsegers_project-ar-backend_page-service
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN_PAGE_SERVICE }}
        with:
          projectBaseDir: page-service
      - name: Docker login
        run: docker login -u ${{ secrets.DOCKER_USER }} -p ${{ secrets.DOCKER_PASSWORD }}
      - name: Docker Build
        run: docker build -t ${{ secrets.DOCKER_USER }}/project-ar-backend/page-service:latest .
      - name: Upload container to Docker Hub with Push
        run: docker push ${{ secrets.DOCKER_USER }}/project-ar-backend/page-service:latest

#  sqldb-books:
#    name: SQL Database Books
#    build:
#      runs-on: ubuntu-latest
#      name: Java 11 build, test, deliver container
#      steps:
#        - name: Check out repository
#          uses: actions/checkout@v3
#        - name: Set up JDK 11
#          uses: actions/setup-java@v3
#          with:
#            java-version: 11
#        - name: Start MySQL for integration test
#          uses: mirromutth/mysql-action@v1.1
#          with:
#          mysql database: 'booksdb_test' # Optional, default value is "test". The specified database which will be created.
#          mysql root password: ${{ secrets.MYSQL_ROOT_PASSWORD }} # Required if "mysql user" is empty, default is empty. The root superuser password
#        - name: Build, test and package project
#          env:
#          GITHUB_TOKEN: ${{ secrets.G_TOKEN }}  # Needed to get PR information, if any
#          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
#          run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=KevinSegers/project-ar-backend/book-service
#        - name: Docker login
#          run: docker login -u ${{ secrets.DOCKER_USER }} -p ${{ secrets.DOCKER_PASSWORD }}
#        - name: Docker Build
#          run: docker build -t ${{ secrets.DOCKER_USER }}/project-ar-backend/book-service .
#        - name: Upload container to Docker Hub with Push
#          run: docker push ${{ secrets.DOCKER_USER }}/project-ar-backend/book-service
#
#  brank-edge:
#    name: Brank Edge
#    needs: [mongodb-pages, sqldb-books]
#    build:
#      runs-on: ubuntu-latest
#      name: Java 11 build, test, deliver container
#      steps:
#        - name: Check out repository
#          uses: actions/checkout@v3
#        - name: Set up JDK 11
#          uses: actions/setup-java@v3
#          with:
#            java-version: 11
#        - name: Build, test and package project
#          env:
#            GITHUB_TOKEN: ${{ secrets.G_TOKEN }}  # Needed to get PR information, if any
#            SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
#          run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=KevinSegers/project-ar-backend/brank-edge-service
#        - name: Docker login
#          run: docker login -u ${{ secrets.DOCKER_USER }} -p ${{ secrets.DOCKER_PASSWORD }}
#        - name: Docker Build
#          run: docker build -t ${{ secrets.DOCKER_USER }}/brank-edge-service:latest .
#        - name: Upload container to Docker Hub with Push
#          run: docker push ${{ secrets.DOCKER_USER }}/brank-edge-service:latest